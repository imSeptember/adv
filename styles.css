.rounded-img {
  width: 60%;
  border-radius: 50%;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);
  padding: 0.6em;
  margin-bottom: 1em;
}

a {
  text-decoration: none;
}

.card {
  border-radius: 1em;
  text-align: center;
  padding: 1em;
}

.card-text {
  float: none;
  overflow: auto;
}

.card:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.card img {
  border-radius: 0%;
  width: 100%;
  margin: auto;
}

.card-img-top {
  align-items: center;
}

.posts {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column-reverse;
  align-items: center;
  flex-grow: 1;
}

.posts_posts {
  padding: 5px;
  justify-content: center;
}

#myBtn {
  display: none; /* Hidden by default */
  position: fixed; /* Fixed/sticky position */
  bottom: 20px; /* Place the button at the bottom of the page */
  right: 30px; /* Place the button 30px from the right */
  z-index: 99; /* Make sure it does not overlap */
  border: none; /* Remove borders */
  outline: none; /* Remove outline */
  background-color: #212529; /* Set a background color */
  color: white; /* Text color */
  cursor: pointer; /* Add a mouse pointer on hover */
  padding: 15px; /* Some padding */
  border-radius: 10px; /* Rounded corners */
  font-size: 18px; /* Increase font size */
}

#myBtn:hover {
  background-color: #555; /* Add a dark-grey background on hover */
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

html {
  font-size: 100%;
}

body {
  font-family: acumin-pro, system-ui, sans-serif;
  margin: 0;
  display: grid;
  grid-template-rows: auto 1fr auto;
  font-size: 14px;
  background-color: #f4f4f4;
  align-items: start;
  min-height: 100vh;
}

.footer {
  display: flex;
  flex-flow: row wrap;
  padding: 30px 30px 20px 30px;
  color: #2f2f2f;
  background-color: #212529;
  border-top: 1px solid #e5e5e5;
}

.footer > * {
  flex: 1 100%;
  color: #999;
}

.footer__addr {
  margin-right: 1.25em;
  margin-bottom: 2em;
}

.footer__logo {
  font-weight: 750;
  font-size: 18px;
}

.footer__addr h2 {
  margin-top: 1.3em;
  font-size: 15px;
  font-weight: 400;
}

.nav__title {
  font-weight: 750;
  font-size: 18px;
}

.footer address {
  font-style: normal;
}

.footer__btn {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 36px;
  max-width: max-content;
  background-color: rgb(33, 33, 33, 0.07);
  border-radius: 100px;
  color: #999;
  line-height: 0;
  margin: 0.6em 0;
  font-size: 1rem;
  padding: 0 1.3em;
}

.footer ul {
  list-style: none;
  padding-left: 0;
}

.footer li {
  line-height: 2em;
}

.footer a {
  text-decoration: none;
}

.footer__nav {
  display: flex;
  flex-flow: row wrap;
}

.footer__nav > * {
  flex: 1 50%;
  margin-right: 1.25em;
}

.nav__ul a {
  color: #999;
}

.legal {
  display: flex;
  flex-wrap: wrap;
  color: #999;
}

@media screen and (min-width: 24.375em) {
  .legal .legal__links {
    margin-left: auto;
  }
}

@media screen and (min-width: 40.375em) {
  .footer__nav > * {
    flex: 1;
  }

  .footer__addr {
    flex: 1 0px;
  }

  .footer__nav {
    flex: 2 0px;
  }
}

.preloader {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  /* фоновый цвет */
  background: #e0e0e0;
  /* z-index: 1001; */
}

.preloader__image {
  position: relative;
  top: 50%;
  left: 50%;
  width: 70px;
  height: 70px;
  margin-top: -35px;
  margin-left: -35px;
  text-align: center;
  animation: preloader-rotate 2s infinite linear;
}

@keyframes preloader-rotate {
  100% {
    transform: rotate(360deg);
  }
}

.loaded_hiding .preloader {
  transition: 0.3s opacity;
  opacity: 0;
}

.loaded .preloader {
  display: none;
}

/* SERVICES PAGE SERVICES PAGE SERVICES PAGE SERVICES PAGE SERVICES PAGE SERVICES PAGE
!
!
!
!
!
!
!
!
SERVICES PAGE SERVICES PAGE SERVICES PAGE SERVICES PAGE SERVICES PAGE SERVICES PAGE */

:root {
  --gap: 4px;
  --background-page: #111;
  --background-container: #333;
  --background-box: #222;
  --color-line: #666;
  --color-font: #444;
  --columns: 3;
  --border-radius: 3px;
  --font-size: 18px;
  --font-family: Arial;
  --transition-duration: 600ms;
  --transition-style: ease-in-out;
  --container-max-width: 640px;
}
body {
  background: var(--background-page);
  font-family: var(--font-family);
  font-size: var(--font-size);
  color: var(--color-font);
}
p.warning {
  text-align: center;
  line-height: 2;
  margin: 0 auto;
  font-size: 14px;
  max-width: var(--container-max-width);
  color: #fff;
}
p.warning a {
  background: #45ba04;
  color: #fff;
  padding: 0.2rem 0.7rem;
  border-radius: 3px;
  white-space: nowrap;
  text-decoration: none;
}
p.warning a.more:hover {
  background: #3bacff;
}
.container1 {
  background: var(--background-container);
  box-shadow: 0 0 16px rgba(0, 0, 0, 1);
  border-radius: var(--border-radius);
  margin: 2em auto;
  max-width: var(--container-max-width);
  display: flex;
  flex-flow: wrap;
  justify-content: space-between; /* Horizontal spacing between the entries. */
  padding: var(--gap) var(--gap) calc(var(--gap) / 2) var(--gap); /* The external spacing of the container. */
  overflow: hidden; /* Prevents .corner::before to be visible outside the margins of the container. */
}
.entry {
  width: calc(
    (100% / var(--columns)) - calc(var(--gap) / 2)
  ); /* Column width must take into account the desired gap. */
  margin-bottom: calc(
    var(--gap) / 2
  ); /* Vertical spacing between the entries. */
  position: relative; /* This is required, to contain .corner::before within the margins of it's parent. */
}
.entry-content {
  display: grid;
  place-items: center;
  min-height: clamp(
    1em,
    calc(100vw / var(--columns)),
    calc(var(--container-max-width) / var(--columns))
  );
  background: var(--background-box);
  transition: all var(--transition-duration) var(--transition-style);
  pointer-events: none; /* When hovering over an entry, ignore this element, even if its on the foreground. */
  z-index: 1; /* The content div should have a higher z-index than the .corner::before. */
  position: relative; /* z-index would have no effect without a specific position. */
}
.entry:hover .entry-content {
  background: var(--background-container);
  color: var(--color-line);
}
.corner-container1 {
  /* The corner container should cover the entire entry. */
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  position: absolute;
}
.corner {
  /* Each corner should cover 1/4 of an entry. */
  position: absolute;
  width: 50%;
  height: 50%;
}
.corner::before {
  /* The cross shape is just a big box positioned behind the entries. */
  content: "";
  display: block;
  position: absolute;
  width: 200%;
  height: 200%;
  opacity: 0;
  transition: opacity var(--transition-duration) var(--transition-style);
  background: radial-gradient(
    var(--color-line) 0,
    transparent 70%
  ); /* Radial gradient smoothens the shape's edges. */
  pointer-events: none; /* This is needed to prevent hovering on the ::before element instead of its container span. */
}
.corner:hover::before {
  opacity: 1;
}
/* Position the corners and their respective shapes. */
.corner:nth-child(1) {
  left: 0;
  top: 0;
}
.corner:nth-child(1)::before {
  left: -100%;
  top: -100%;
}
.corner:nth-child(2) {
  right: 0;
  top: 0;
}
.corner:nth-child(2)::before {
  right: -100%;
  top: -100%;
}
.corner:nth-child(3) {
  left: 0;
  bottom: 0;
}
.corner:nth-child(3)::before {
  left: -100%;
  bottom: -100%;
}
.corner:nth-child(4) {
  right: 0;
  bottom: 0;
}
.corner:nth-child(4)::before {
  right: -100%;
  bottom: -100%;
}
